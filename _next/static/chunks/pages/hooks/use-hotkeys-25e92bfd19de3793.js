(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4114],{60535:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-hotkeys",function(){return o(60045)}])},60045:function(e,n,o){"use strict";o.r(n),o.d(n,{default:function(){return p}});var t=o(24246),s=o(71670),r=o(3916),l=o(30289),i=o(27378),d=o(69142),a=o(68439),c=o(59269),h=o(7033);let u=`
import { useState } from 'react';
import { getHotkeyHandler } from '@mantine/hooks';
import { notifications } from '@mantine/notifications';
import { TextInput } from '@mantine/core';

function Demo() {
  const [value, setValue] = useState("I've just used a hotkey to send a message");
  const handleSubmit = () => notifications.show({ title: 'Your message', message: value });
  const handleSave = () => notifications.show({ title: 'You saved', color: 'teal', message: value });

  return (
    <TextInput
      placeholder="Your message"
      label="Press \u2318+Enter or Ctrl+Enter when input has focus to send message"
      value={value}
      onChange={(event) => setValue(event.target.value)}
      onKeyDown={getHotkeyHandler([
        ['mod+Enter', handleSubmit],
        ['mod+S', handleSave],
      ])}
    />
  );
}
`,m={type:"code",code:u,component:function(){(0,d.A)([["alt+mod+shift+X",()=>{window.location.href="https://www.youtube.com/watch?v=dQw4w9WgXcQ"}]]);let[e,n]=(0,i.useState)("I've just used a hotkey to send a message");return i.createElement(h.o,{placeholder:"Your message",label:"Press ⌘+Enter or Ctrl+Enter when input has focus to send message",value:e,onChange:e=>n(e.target.value),onKeyDown:(0,a.yr)([["mod+Enter",()=>c.N9.show({title:"Your message",message:e})],["mod+S",()=>c.N9.show({title:"You saved",color:"teal",message:e})]])})}},g=(0,r.A)(l.us.useHotkeys);function x(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components},{Demo:o}=n;return o||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Demo",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"use-hotkeys"})," accepts as its first argument an array of hotkeys and handler tuples:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hotkey"})," - hotkey string, for example ",(0,t.jsx)(n.code,{children:"ctrl+E"}),", ",(0,t.jsx)(n.code,{children:"shift+alt+L"}),", ",(0,t.jsx)(n.code,{children:"mod+S"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"handler"})," - event handler called when a given combination was pressed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," - object with extra options for hotkey handler"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The second argument is a list of HTML tags:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tagsToIgnore"})," - HTML tag names that hotkeys will not trigger on"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"triggerOnContentEditable"})," - Whether shortcuts should trigger when based on contentEditable"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { useHotkeys } from '@mantine/hooks';\n\nfunction Demo() {\n  // ctrl + J and ⌘ + J to toggle color scheme\n  // ctrl + K and ⌘ + K to search\n  useHotkeys([\n    ['mod+J', () => console.log('Toggle color scheme')],\n    ['ctrl+K', () => console.log('Trigger search')],\n    ['alt+mod+shift+X', () => console.log('Rick roll')],\n  ]);\n\n  return null;\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"targeting-elements",children:"Targeting elements"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"use-hotkeys"})," hook can work only with document element, you will need to create your own event listener\nif you need to support other elements. For this purpose, ",(0,t.jsx)(n.code,{children:"@mantine/hooks"})," package exports ",(0,t.jsx)(n.code,{children:"getHotkeyHandler"})," function\nwhich should be used with ",(0,t.jsx)(n.code,{children:"onKeyDown"}),":"]}),"\n",(0,t.jsx)(o,{data:m}),"\n",(0,t.jsxs)(n.p,{children:["With ",(0,t.jsx)(n.code,{children:"getHotkeyHandler"})," you can also add events to any dom node using ",(0,t.jsx)(n.code,{children:".addEventListener"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { getHotkeyHandler } from '@mantine/hooks';\n\ndocument.body.addEventListener(\n  'keydown',\n  getHotkeyHandler([\n    ['mod+Enter', () => console.log('Submit')],\n    ['mod+S', () => console.log('Save')],\n  ])\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"supported-formats",children:"Supported formats"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mod+S"})," – detects ",(0,t.jsx)(n.code,{children:"⌘+S"})," on macOS and ",(0,t.jsx)(n.code,{children:"Ctrl+S"})," on Windows"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ctrl+shift+X"})," – handles multiple modifiers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"alt + shift + L"})," – you can use whitespace inside hotkey"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ArrowLeft"})," – you can use special keys using ",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values",children:"this format"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"function useHotkeys(\n  hotKeyItem: Array<\n    [\n      hotkey: string,\n      handler: (event: KeyboardEvent) => void,\n      options?: { preventDefault?: boolean },\n    ]\n  >,\n  tagsToIgnore?: string[]\n): void;\n"})})]})}function p(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,t.jsx)(g,{...e,children:(0,t.jsx)(x,{...e})})}}},function(e){e.O(0,[370,5819,2775,9774,2888,179],function(){return e(e.s=60535)}),_N_E=e.O()}]);