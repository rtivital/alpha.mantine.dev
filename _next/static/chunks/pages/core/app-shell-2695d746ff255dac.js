(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9483],{13597:function(e,n,l){(window.__NEXT_P=window.__NEXT_P||[]).push(["/core/app-shell",function(){return l(84494)}])},84494:function(e,n,l){"use strict";l.r(n),l.d(n,{default:function(){return h}});var o=l(24246),i=l(71670),s=l(3916),r=l(30289);let d=(0,s.A)(r.us.AppShell);function t(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{ExamplesButton:l}=n;return l||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ExamplesButton",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsxs)(n.p,{children:["This page includes only documentation. Since all associated ",(0,o.jsx)(n.code,{children:"AppShell"})," components have fixed\nposition, it is not possible to include demos on this page."]}),"\n",(0,o.jsx)(l,{link:"/app-shell?e=BasicAppShell",label:"Open AppShell examples page"}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"AppShell"})," is a layout component. It can be used to implement a common Header – Navbar – Footer – Aside\nlayout pattern. All ",(0,o.jsx)(n.code,{children:"AppShell"})," components have ",(0,o.jsx)(n.code,{children:"position: fixed"})," style – they are not scrolled with\nthe page."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/app-shell?e=BasicAppShell",children:"Basic AppShell example"})," with header and navbar.\nNavbar is hidden on mobile by default and toggled with the burger button."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { useDisclosure } from \'@mantine/hooks\';\nimport { AppShell, Burger } from \'@mantine/core\';\n\nfunction Demo() {\n  const [opened, { toggle }] = useDisclosure();\n\n  return (\n    <AppShell\n      header={{ height: 60 }}\n      navbar={{\n        width: 300,\n        breakpoint: \'sm\',\n        collapsed: { mobile: !opened },\n      }}\n      padding="md"\n    >\n      <AppShell.Header>\n        <Burger\n          opened={opened}\n          onClick={toggle}\n          hiddenFrom="sm"\n          size="sm"\n        />\n        <div>Logo</div>\n      </AppShell.Header>\n\n      <AppShell.Navbar p="md">Navbar</AppShell.Navbar>\n\n      <AppShell.Main>Main</AppShell.Main>\n    </AppShell>\n  );\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"appshell-components",children:"AppShell components"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell"})," – root component, it is required to wrap all other components, used to configure layout properties"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Header"})," – header section rendered at the top of the page, has fixed position, its height and collapsed state are controlled by the AppShell ",(0,o.jsx)(n.code,{children:"header"})," prop"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Navbar"})," – navbar section rendered at the left side of the page, has fixed position, its width and collapsed state are controlled by the AppShell ",(0,o.jsx)(n.code,{children:"navbar"})," prop"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Aside"})," – aside section rendered at the right side of the page, has fixed position, its width and collapsed state are controlled by the AppShell ",(0,o.jsx)(n.code,{children:"aside"})," prop"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Footer"})," – footer section rendered at the bottom of the page, has fixed position, its height and collapsed state are controlled by the AppShell ",(0,o.jsx)(n.code,{children:"footer"})," prop"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Main"})," – main section rendered at the center of the page, has static position, all other sections are offset by its padding"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Section"})," – utility component that can be used to render group of content inside ",(0,o.jsx)(n.code,{children:"AppShell.Navbar"})," and ",(0,o.jsx)(n.code,{children:"AppShell.Aside"}),", can be used to create areas with custom scrollbars"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"AppShell"})," component accepts, ",(0,o.jsx)(n.code,{children:"header"}),", ",(0,o.jsx)(n.code,{children:"footer"}),", ",(0,o.jsx)(n.code,{children:"navbar"})," and ",(0,o.jsx)(n.code,{children:"aside"})," props to configure\ncorresponding sections. It is required to set these props if you want to use corresponding\ncomponents. For example, if you want to use ",(0,o.jsx)(n.code,{children:"AppShell.Header"})," component, you need to set ",(0,o.jsx)(n.code,{children:"header"}),"\nprop on the ",(0,o.jsx)(n.code,{children:"AppShell"})," component."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"header"})," and ",(0,o.jsx)(n.code,{children:"footer"})," configuration objects are the same and have the following properties:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"interface Configuration {\n  /** Height of the section: number, string or\n   ** object with breakpoints as keys and height as value */\n  height: AppShellSize | AppShellResponsiveSize;\n\n  /** If section is collapsed,\n   ** it is hidden from the viewport and is not offset in AppShell.Main */\n  collapsed?: boolean;\n\n  /** Determines whether the section should be offset by the AppShell.Main.\n   ** For example, it is useful if you want to\n   ** hide header based on the scroll position. */\n  offset?: boolean;\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"navbar"})," and ",(0,o.jsx)(n.code,{children:"aside"})," configuration objects are the same as well and have the following properties:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"interface Configuration {\n  /** Width of the section: number, string or\n   ** object with breakpoints as keys and width as value */\n  width: AppShellSize | AppShellResponsiveSize;\n\n  /** Breakpoint at which section should switch to mobile mode\n   ** In mobile mode the section always has 100% width and its\n   ** collapsed state is controlled by the `collapsed.mobile`\n   ** instead of `collapsed.desktop` */\n  breakpoint: MantineBreakpoint | (string & {}) | number;\n\n  /** Determines whether the section should be collapsed */\n  collapsed?: { desktop?: boolean; mobile?: boolean };\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"layout-prop",children:"layout prop"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"layout"})," prop controls how ",(0,o.jsx)(n.code,{children:"AppShell.Header"}),"/",(0,o.jsx)(n.code,{children:"AppShell.Footer"})," and ",(0,o.jsx)(n.code,{children:"AppShell.Navbar"}),"/",(0,o.jsx)(n.code,{children:"AppShell.Aside"}),"\nare positioned relative to each other. It accepts ",(0,o.jsx)(n.code,{children:"alt"})," and ",(0,o.jsx)(n.code,{children:"default"})," values:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"alt"})," – ",(0,o.jsx)(n.code,{children:"AppShell.Navbar"}),"/",(0,o.jsx)(n.code,{children:"AppShell.Aside"})," height is equal to viewport height, ",(0,o.jsx)(n.code,{children:"AppShell.Header"}),"/",(0,o.jsx)(n.code,{children:"AppShell.Footer"})," width is equal to viewport width - ",(0,o.jsx)(n.code,{children:"AppShell.Navbar"})," and ",(0,o.jsx)(n.code,{children:"AppShell.Aside"})," width (",(0,o.jsx)(n.a,{href:"/app-shell?e=AltLayout",children:"example"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"default"})," – ",(0,o.jsx)(n.code,{children:"AppShell.Navbar"}),"/",(0,o.jsx)(n.code,{children:"AppShell.Aside"})," height is equal to viewport height - ",(0,o.jsx)(n.code,{children:"AppShell.Header"}),"/",(0,o.jsx)(n.code,{children:"AppShell.Footer"})," height, ",(0,o.jsx)(n.code,{children:"AppShell.Header"}),"/",(0,o.jsx)(n.code,{children:"AppShell.Footer"})," width is equal to viewport width (",(0,o.jsx)(n.a,{href:"/app-shell?e=FullLayout",children:"example"}),")"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"height-configuration",children:"Height configuration"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"height"})," property in ",(0,o.jsx)(n.code,{children:"header"})," and ",(0,o.jsx)(n.code,{children:"footer"})," configuration objects works the following way:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If you pass a number, the value will be converted to ",(0,o.jsx)(n.a,{href:"/styles/rem",children:"rem"})," and used as\nheight at all viewport sizes."]}),"\n",(0,o.jsxs)(n.li,{children:["To change height based on viewport width, use object with breakpoints as keys and height as\nvalues. It works the same way as ",(0,o.jsx)(n.a,{href:"/styles/style-props#responsive-styles",children:"style props"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Examples:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\n// Height is a number, it will be converted to rem\n// and used as height at all viewport sizes\nfunction Demo() {\n  return (\n    <AppShell header={{ height: 48 }}>\n      <AppShell.Header>Header</AppShell.Header>\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\n// Height is an object with breakpoints:\n// - height is 48 when viewport width is < theme.breakpoints.sm\n// - height is 60 when viewport width is >= theme.breakpoints.sm and < theme.breakpoints.lg\n// - height is 76 when viewport width is >= theme.breakpoints.lg\nfunction Demo() {\n  return (\n    <AppShell header={{ height: { base: 48, sm: 60, lg: 76 } }}>\n      <AppShell.Header>Header</AppShell.Header>\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"width-configuration",children:"Width configuration"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"width"})," property in ",(0,o.jsx)(n.code,{children:"navbar"})," and ",(0,o.jsx)(n.code,{children:"aside"})," configuration objects works the following way:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If you pass a number, the value will be converted to ",(0,o.jsx)(n.a,{href:"/styles/rem",children:"rem"})," and used as\nwidth when the viewport is larger than ",(0,o.jsx)(n.code,{children:"breakpoint"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["To change width based on viewport width, use object with breakpoints as keys and width as\nvalues. It works the same way as ",(0,o.jsx)(n.a,{href:"/styles/style-props#responsive-styles",children:"style props"}),".\nNote that width is always 100% when the viewport is smaller than ",(0,o.jsx)(n.code,{children:"breakpoint"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Examples:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\n// Width is a number, it will be converted to rem\n// and used as width when viewport is larger than theme.breakpoints.sm\nfunction Demo() {\n  return (\n    <AppShell navbar={{ width: 48, breakpoint: 'sm' }}>\n      <AppShell.Navbar>Navbar</AppShell.Navbar>\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\n// Width is an object with breakpoints:\n// - width is 100% when viewport width is < theme.breakpoints.sm\n// - width is 200 when viewport width is >= theme.breakpoints.sm and < theme.breakpoints.lg\n// - width is 300 when viewport width is >= theme.breakpoints.lg\nfunction Demo() {\n  return (\n    <AppShell\n      navbar={{ width: { sm: 200, lg: 300 }, breakpoint: 'sm' }}\n    >\n      <AppShell.Navbar>Navbar</AppShell.Navbar>\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"padding-prop",children:"padding prop"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"padding"})," prop controls the padding of the ",(0,o.jsx)(n.code,{children:"AppShell.Main"})," component. It is important to use it\ninstead of setting padding on the ",(0,o.jsx)(n.code,{children:"AppShell.Main"})," directly because padding of the ",(0,o.jsx)(n.code,{children:"AppShell.Main"})," is\nalso used to offset ",(0,o.jsx)(n.code,{children:"AppShell.Header"}),", ",(0,o.jsx)(n.code,{children:"AppShell.Navbar"}),", ",(0,o.jsx)(n.code,{children:"AppShell.Aside"})," and ",(0,o.jsx)(n.code,{children:"AppShell.Footer"})," components."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"padding"})," prop works the same way as ",(0,o.jsx)(n.a,{href:"/styles/style-props#responsive-styles",children:"style props"})," and\naccepts numbers, strings and objects with breakpoints as keys and padding as values. You can\nreference ",(0,o.jsx)(n.code,{children:"theme.spacing"})," values or use any valid CSS values."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\n// Padding is always theme.spacing.md\nfunction Demo() {\n  return <AppShell padding=\"md\">{/* AppShell content */}</AppShell>;\n}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\n// Padding is:\n// - 10 when viewport width is < theme.breakpoints.sm\n// - 15 when viewport width is >= theme.breakpoints.sm and < theme.breakpoints.lg\n// - theme.spacing.xl when viewport width is >= theme.breakpoints.lg\nfunction Demo() {\n  return (\n    <AppShell padding={{ base: 10, sm: 15, lg: 'xl' }}>\n      {/* AppShell content */}\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"header-offset-configuration",children:"Header offset configuration"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"header"})," prop has ",(0,o.jsx)(n.code,{children:"offset"})," property which allows removing ",(0,o.jsx)(n.code,{children:"AppShell.Header"})," offset from ",(0,o.jsx)(n.code,{children:"AppShell.Main"})," component.\nIt is useful when you want to collapse ",(0,o.jsx)(n.code,{children:"AppShell.Header"})," based on the scroll position. For example, you can use\n",(0,o.jsx)(n.a,{href:"/hooks/use-headroom",children:"use-headroom"})," hook to collapse header when user scrolls down and expand it when user scrolls up (",(0,o.jsx)(n.a,{href:"/app-shell?e=Headroom",children:"example"}),")."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useHeadroom } from '@mantine/hooks';\nimport { AppShell, rem } from '@mantine/core';\n\nfunction Demo() {\n  const pinned = useHeadroom({ fixedAt: 120 });\n\n  return (\n    <AppShell\n      header={{ height: 60, collapsed: !pinned, offset: false }}\n      padding=\"md\"\n    >\n      <AppShell.Header>Header</AppShell.Header>\n\n      <AppShell.Main\n        pt={`calc(${rem(60)} + var(--mantine-spacing-md))`}\n      >\n        {/* Content */}\n      </AppShell.Main>\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"collapsed-navbaraside-configuration",children:"Collapsed navbar/aside configuration"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"navbar"})," and ",(0,o.jsx)(n.code,{children:"aside"})," props have ",(0,o.jsx)(n.code,{children:"collapsed"})," property. The property accepts an object\n",(0,o.jsx)(n.code,{children:"{ mobile: boolean; desktop: boolean }"})," which allows to configure collapsed state\ndepending on the viewport width."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/app-shell?e=CollapseDesktop",children:"Example"})," with separate collapsed state for mobile and desktop:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useDisclosure } from '@mantine/hooks';\nimport { AppShell, Button } from '@mantine/core';\n\nexport function CollapseDesktop() {\n  const [mobileOpened, { toggle: toggleMobile }] = useDisclosure();\n  const [desktopOpened, { toggle: toggleDesktop }] =\n    useDisclosure(true);\n\n  return (\n    <AppShell\n      padding=\"md\"\n      header={{ height: 60 }}\n      navbar={{\n        width: 300,\n        breakpoint: 'sm',\n        collapsed: { mobile: !mobileOpened, desktop: !desktopOpened },\n      }}\n    >\n      <AppShell.Header>Header</AppShell.Header>\n      <AppShell.Navbar>Navbar</AppShell.Navbar>\n      <AppShell.Main>\n        <Button onClick={toggleDesktop} visibleFrom=\"sm\">\n          Toggle navbar\n        </Button>\n        <Button onClick={toggleMobile} hiddenFrom=\"sm\">\n          Toggle navbar\n        </Button>\n      </AppShell.Main>\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"withborder-prop",children:"withBorder prop"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"withBorder"})," prop is available on ",(0,o.jsx)(n.code,{children:"AppShell"})," and associated sections: ",(0,o.jsx)(n.code,{children:"AppShell.Header"}),", ",(0,o.jsx)(n.code,{children:"AppShell.Navbar"}),", ",(0,o.jsx)(n.code,{children:"AppShell.Aside"})," and ",(0,o.jsx)(n.code,{children:"AppShell.Footer"}),".\nBy default, ",(0,o.jsx)(n.code,{children:"withBorder"})," prop is ",(0,o.jsx)(n.code,{children:"true"})," – all components have a border on the side that is adjacent to the ",(0,o.jsx)(n.code,{children:"AppShell.Main"})," component.\nFor example, ",(0,o.jsx)(n.code,{children:"AppShell.Header"})," is located at the top of the page – it has a border on the bottom side,\n",(0,o.jsx)(n.code,{children:"AppShell.Navbar"})," is located on the left side of the page – it has a border on the right side."]}),"\n",(0,o.jsxs)(n.p,{children:["To remove the border from all components, set ",(0,o.jsx)(n.code,{children:"withBorder={false}"})," on the ",(0,o.jsx)(n.code,{children:"AppShell"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\n// None of the components will have a border\nfunction Demo() {\n  return (\n    <AppShell withBorder={false}>{/* AppShell content */}</AppShell>\n  );\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["To remove the border from a specific component, set ",(0,o.jsx)(n.code,{children:"withBorder={false}"})," on that component:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\n// AppShell.Header does not have a border\n// AppShell.Navbar and AppShell.Aside have a border\nfunction Demo() {\n  return (\n    <AppShell>\n      <AppShell.Header withBorder={false}>Header</AppShell.Header>\n      <AppShell.Navbar>Navbar</AppShell.Navbar>\n      <AppShell.Aside>Aside</AppShell.Aside>\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"zindex-prop",children:"zIndex prop"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"zIndex"})," prop is available on ",(0,o.jsx)(n.code,{children:"AppShell"})," and associated sections: ",(0,o.jsx)(n.code,{children:"AppShell.Header"}),", ",(0,o.jsx)(n.code,{children:"AppShell.Navbar"}),", ",(0,o.jsx)(n.code,{children:"AppShell.Aside"})," and ",(0,o.jsx)(n.code,{children:"AppShell.Footer"}),".\nBy default, all sections ",(0,o.jsx)(n.code,{children:"z-index"})," is ",(0,o.jsx)(n.code,{children:"200"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["To change ",(0,o.jsx)(n.code,{children:"z-index"})," of all sections, set ",(0,o.jsx)(n.code,{children:"zIndex"})," prop on the ",(0,o.jsx)(n.code,{children:"AppShell"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\n// All sections will have z-index of 100\nfunction Demo() {\n  return <AppShell zIndex={100}>{/* AppShell content */}</AppShell>;\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["To change ",(0,o.jsx)(n.code,{children:"z-index"})," of a specific section, set ",(0,o.jsx)(n.code,{children:"zIndex"})," prop on that section:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\n// AppShell.Header has z-index of 100\n// AppShell.Navbar and AppShell.Aside have z-index of 300\nfunction Demo() {\n  return (\n    <AppShell>\n      <AppShell.Header zIndex={100}>Header</AppShell.Header>\n      <AppShell.Navbar zIndex={300}>Navbar</AppShell.Navbar>\n      <AppShell.Aside zIndex={300}>Aside</AppShell.Aside>\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"control-transitions",children:"Control transitions"}),"\n",(0,o.jsxs)(n.p,{children:["Set ",(0,o.jsx)(n.code,{children:"transitionDuration"})," and ",(0,o.jsx)(n.code,{children:"transitionTimingFunction"})," props on the ",(0,o.jsx)(n.code,{children:"AppShell"})," to control transitions:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\nfunction Demo() {\n  return (\n    <AppShell\n      transitionDuration={500}\n      transitionTimingFunction=\"ease\"\n    >\n      {/* AppShell content */}\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"disabled-prop",children:"disabled prop"}),"\n",(0,o.jsxs)(n.p,{children:["Set ",(0,o.jsx)(n.code,{children:"disabled"})," prop on the ",(0,o.jsx)(n.code,{children:"AppShell"})," to prevent all sections except ",(0,o.jsx)(n.code,{children:"AppShell.Main"})," from rendering.\nIt is useful when you want to hide the shell on some pages of your application."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell } from '@mantine/core';\n\nfunction Demo() {\n  return <AppShell disabled>{/* AppShell content */}</AppShell>;\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"appshellsection-component",children:"AppShell.Section component"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"AppShell.Section"})," component can be used to create scrollable areas inside ",(0,o.jsx)(n.code,{children:"AppShell.Navbar"})," and ",(0,o.jsx)(n.code,{children:"AppShell.Aside"}),".\nRoot elements of ",(0,o.jsx)(n.code,{children:"AppShell.Navbar"})," and ",(0,o.jsx)(n.code,{children:"AppShell.Aside"})," are flexbox containers with ",(0,o.jsx)(n.code,{children:"flex-direction: column"}),",\n",(0,o.jsx)(n.code,{children:"AppShell.Section"})," with ",(0,o.jsx)(n.code,{children:"grow"})," attribute will take all available space and will be scrollable if ",(0,o.jsx)(n.code,{children:"component={ScrollArea}"}),"\nis set."]}),"\n",(0,o.jsx)(n.p,{children:"In the following example:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["First and last sections (header and footer) will take as much space as they need to render ",(0,o.jsx)(n.code,{children:"children"})]}),"\n",(0,o.jsx)(n.li,{children:"Second section will take all available space and will be scrollable if content height exceeds available space"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { AppShell, ScrollArea } from '@mantine/core';\n\nfunction Demo() {\n  return (\n    <AppShell navbar={{ width: 300 }}>\n      <AppShell.Navbar>\n        <AppShell.Section>Navbar header</AppShell.Section>\n        <AppShell.Section grow component={ScrollArea}>\n          Navbar main section, it will\n        </AppShell.Section>\n        <AppShell.Section>\n          Navbar footer – always at the bottom\n        </AppShell.Section>\n      </AppShell.Navbar>\n      <AppShell.Main>Main</AppShell.Main>\n    </AppShell>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"semantic-elements",children:"Semantic elements"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Header"})," root element is ",(0,o.jsx)(n.code,{children:"header"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Navbar"})," root element is ",(0,o.jsx)(n.code,{children:"nav"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Aside"})," root element is ",(0,o.jsx)(n.code,{children:"aside"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Footer"})," root element is ",(0,o.jsx)(n.code,{children:"footer"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"AppShell.Main"})," root element is ",(0,o.jsx)(n.code,{children:"main"})," – ",(0,o.jsx)(n.strong,{children:"!important:"})," do not use ",(0,o.jsx)(n.code,{children:"main"})," element inside ",(0,o.jsx)(n.code,{children:"AppShell.Main"})," component"]}),"\n"]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,o.jsx)(d,{...e,children:(0,o.jsx)(t,{...e})})}}},function(e){e.O(0,[370,5819,2775,9774,2888,179],function(){return e(e.s=13597)}),_N_E=e.O()}]);